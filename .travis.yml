language: minimal
dist: xenial

env:
  global:
    - ARCH=x86_64
  jobs:
    - ID=org.gnome.gedit
    - ID=com.github.babluboy.bookworm
    - ID=com.github.calo001.fondo
    # ID=com.github.maoschanz.drawing
    - ID=org.videolan.VLC

before_install:
  - sudo add-apt-repository ppa:alexlarsson/flatpak -y
  - sudo apt-get update -q
  - sudo apt-get -y install flatpak imagemagick curl binutils
  - wget -c https://github.com/$(wget -q https://github.com/probonopd/go-appimage/releases -O - | grep "appimagetool-.*-x86_64.AppImage" | head -n 1 | cut -d '"' -f 2)
  - chmod +x ./*.AppImage
  
script:
  - flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  - flatpak install -v --noninteractive --user "${ID}"
  - mkdir -p appdir
  - cp -r "${HOME}/.local/share/flatpak/app/${ID}/current/active/files" ./appdir/usr/
  - find ./appdir/usr/share/applications -type f -exec sed -i -e 's|/app/bin/||g' {} \; || true # Want no paths in Exec=
  - find ./appdir/usr/share/applications -type f -exec sed -i -e 's|/usr/bin/||g' {} \; || true # Want no paths in Exec=
  - flatpak run --filesystem=host --user --command=$(readlink -f ./appimagetool-*-x86_64.AppImage) "${ID}" -s deploy $(readlink -f appdir/usr/share/applications/"${ID}".desktop) --appimage-extract-and-run # On Ubuntu Live ISO, getting: bwrap: Can't make symlink at /var/run: File exists
  - LD_LIBRARY_PATH='' find $(readlink -f appdir) -type f -exec ldd {} 2>&1 \; | grep '=>' | grep -v $(readlink -f appdir)
  - sed -i -e 's|DBusActivatable|X-DBusActivatable|g' appdir/"${ID}".desktop # FIXME: Work around non-1.0 desktop files
  - sed -i -e 's|Keywords|X-Keywords|g' appdir/"${ID}".desktop # FIXME: Work around non-1.0 desktop files
  - mkdir -p appdir/usr/share/icons/hicolor/128x128/apps
  - cp appdir/usr/share/app-info/icons/flatpak/128x128/"${ID}.png" appdir/
  - cp appdir/usr/share/app-info/icons/flatpak/128x128/"${ID}.png" appdir/usr/share/icons/hicolor/128x128/apps
  - sed -i -e 's|/usr||g' $(find appdir/ -type f -name loaders.cache | head -n 1) || true # FIXME in go-appimagetool
  - sed -i -e 's|/etc|/xxx|g' appdir/usr/lib64/ld-linux-x86-64.so.2 || true # FIXME in go-appimagetool; --inhibit-cache is not working
  - sed -i -e 's|/etc|/xxx|g' appdir/lib64/ld-linux-x86-64.so.2 || true # FIXME in go-appimagetool; --inhibit-cache is not working
  - sudo chmod +x appdir/usr/lib64/ld-linux-x86-64.so.2 appdir/lib64/ld-linux-x86-64.so.2 || true # FIXME in go-appimagetool
  - RUNTIME=$(LANG=en flatpak info "${ID}" --user | grep "Runtime:" | cut -d ":" -f 2 | cut -d " " -f 2) # e.g., org.gnome.Platform/x86_64/3.36
  - cp "${HOME}/.local/share/flatpak/runtime/${RUNTIME}/active/files/share/glib-2.0/schemas" appdir/usr/share/glib-2.0/runtime-schemas || true
  - find appdir/ -type f -exec sed -i -e 's|/app|././|g' {} \; # Patch away hardcoded /app
  - touch appdir/dummy.ui # Force cd usr/ before AppImage is run
  - find appdir/
  - export VERSION=$(LANG=en flatpak info "${ID}" --user | grep "Version:" | cut -d ":" -f 2 | cut -d " " -f 2)
  - ./appimagetool-*-x86_64.AppImage appdir/
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
